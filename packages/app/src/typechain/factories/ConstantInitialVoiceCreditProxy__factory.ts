/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConstantInitialVoiceCreditProxy,
  ConstantInitialVoiceCreditProxyInterface,
} from "../ConstantInitialVoiceCreditProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getVoiceCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101dd3803806101dd83398101604081905261002f91610037565b60005561004f565b600060208284031215610048578081fd5b5051919050565b61017f8061005e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b36543a914610030575b600080fd5b61004361003e366004610061565b610059565b604051610050919061012a565b60405180910390f35b505060005490565b60008060408385031215610073578182fd5b82356001600160a01b0381168114610089578283fd5b915060208301356001600160401b03808211156100a4578283fd5b818501915085601f8301126100b7578283fd5b8135818111156100c9576100c9610133565b604051601f8201601f19908116603f011681019083821181831017156100f1576100f1610133565b81604052828152886020848701011115610109578586fd5b82602086016020830137856020848301015280955050505050509250929050565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d8151771cd898e42c014bacd32d984f32ed4f23721886b52299c4efe096ba05d64736f6c63430008010033";

type ConstantInitialVoiceCreditProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantInitialVoiceCreditProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConstantInitialVoiceCreditProxy__factory extends ContractFactory {
  constructor(...args: ConstantInitialVoiceCreditProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConstantInitialVoiceCreditProxy> {
    return super.deploy(
      _balance,
      overrides || {}
    ) as Promise<ConstantInitialVoiceCreditProxy>;
  }
  getDeployTransaction(
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_balance, overrides || {});
  }
  attach(address: string): ConstantInitialVoiceCreditProxy {
    return super.attach(address) as ConstantInitialVoiceCreditProxy;
  }
  connect(signer: Signer): ConstantInitialVoiceCreditProxy__factory {
    return super.connect(signer) as ConstantInitialVoiceCreditProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantInitialVoiceCreditProxyInterface {
    return new utils.Interface(
      _abi
    ) as ConstantInitialVoiceCreditProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConstantInitialVoiceCreditProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConstantInitialVoiceCreditProxy;
  }
}
