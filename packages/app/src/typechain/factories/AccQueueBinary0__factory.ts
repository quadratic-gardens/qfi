/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccQueueBinary0,
  AccQueueBinary0Interface,
} from "../AccQueueBinary0";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subDepth",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "calcMinHeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_leaf",
        type: "uint256",
      },
    ],
    name: "enqueue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depth",
        type: "uint256",
      },
    ],
    name: "getMainRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSmallSRTroot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSrIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getSubRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_leaf",
        type: "uint256",
      },
    ],
    name: "hashLevelLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_subRoot",
        type: "uint256",
      },
    ],
    name: "insertSubTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depth",
        type: "uint256",
      },
    ],
    name: "merge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "mergeSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "subTreesMerged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeMerged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "$786969981fde07b94dd43900e3ddcb0089$__9063248f66779061079b908590600401611946565b60206040518083038186803b1580156107b357600080fd5b505af41580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611819565b61016e5460009060ff166108115760405162461bcd60e51b815260040161030390611b3a565b5061016f5490565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160028360405160200161084f919061186a565b60408051601f1981840301815290829052610869916118a0565b602060405180830381855afa158015610886573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108a99190611819565b6104b09190611e97565b60006108bd611529565b838152602081018390526108d08161090a565b949350505050565b6000806108d0600285602181106108ff57634e487b7160e01b600052603260045260246000fd5b6004020154846108b3565b6040516314d2f97b60e11b815260009073__$596cabfdcfe42a7e95c4859ee209d8ae06$__906329a5f2f69061079b9085906004016118ed565b61016e54610100900460ff1681565b61095b610f70565b6001600160a01b031661096c6109a9565b6001600160a01b0316146109925760405162461bcd60e51b815260040161030390611b05565b61099c6000611123565b565b610170546001549091565b6000546001600160a01b031690565b604051630926f44b60e31b815260009073__$ef696bd9a8b217cb2f06b9f3dff68275d6$__90634937a2589061079b90859060040161196e565b61016e5460ff1681565b6040516304b98e1d60e31b815260009073__$c2ea40cdad08c2f0f910bd605f43e18753$";

type AccQueueBinary0ConstructorParams =
  | [linkLibraryAddresses: AccQueueBinary0LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccQueueBinary0ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AccQueueBinary0__factory extends ContractFactory {
  constructor(...args: AccQueueBinary0ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccQueueBinary0__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AccQueueBinary0LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$786969981fde07b94dd43900e3ddcb0089\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$596cabfdcfe42a7e95c4859ee209d8ae06\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ef696bd9a8b217cb2f06b9f3dff68275d6\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c2ea40cdad08c2f0f910bd605f43e18753\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _subDepth: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccQueueBinary0> {
    return super.deploy(_subDepth, overrides || {}) as Promise<AccQueueBinary0>;
  }
  getDeployTransaction(
    _subDepth: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_subDepth, overrides || {});
  }
  attach(address: string): AccQueueBinary0 {
    return super.attach(address) as AccQueueBinary0;
  }
  connect(signer: Signer): AccQueueBinary0__factory {
    return super.connect(signer) as AccQueueBinary0__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccQueueBinary0Interface {
    return new utils.Interface(_abi) as AccQueueBinary0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccQueueBinary0 {
    return new Contract(address, _abi, signerOrProvider) as AccQueueBinary0;
  }
}

export interface AccQueueBinary0LibraryAddresses {
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT5"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT3"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT6"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT4"]: string;
}
