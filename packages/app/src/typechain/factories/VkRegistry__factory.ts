/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VkRegistry, VkRegistryInterface } from "../VkRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageBatchSize",
        type: "uint256",
      },
    ],
    name: "genProcessVkSig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_intStateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
    ],
    name: "genTallyVkSig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageBatchSize",
        type: "uint256",
      },
    ],
    name: "getProcessVk",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sig",
        type: "uint256",
      },
    ],
    name: "getProcessVkBySig",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_intStateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
    ],
    name: "getTallyVk",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sig",
        type: "uint256",
      },
    ],
    name: "getTallyVkBySig",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageBatchSize",
        type: "uint256",
      },
    ],
    name: "hasProcessVk",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_intStateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
    ],
    name: "hasTallyVk",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sig",
        type: "uint256",
      },
    ],
    name: "isProcessVkSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sig",
        type: "uint256",
      },
    ],
    name: "isTallyVkSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_intStateTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteOptionTreeDepth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageBatchSize",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "_processVk",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct SnarkCommon.VerifyingKey",
        name: "_tallyVk",
        type: "tuple",
      },
    ],
    name: "setVerifyingKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611399806100896000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c80630bfbd4fe146100bf57806317b7f810146100e85780631afe11ef14610108578063257752d314610128578063269605171461013b5780634f1b0e5f1461014e578063715018a6146101615780638da5cb5b1461016b578063abc61c6b14610180578063b2e3953014610193578063ba2ff7ab146101a6578063c7c8beec146101b9578063db9f755b146101cc578063f2fde38b146101df575b600080fd5b6100d26100cd366004610f66565b6101f2565b6040516100df9190611222565b60405180910390f35b6100fb6100f6366004610f23565b61021d565b6040516100df9190611095565b61011b610116366004610f3b565b610232565b6040516100df91906112c6565b6100fb610136366004610f23565b610259565b6100fb610149366004610f3b565b61026e565b6100fb61015c366004610f66565b610297565b6101696102c2565b005b610173610316565b6040516100df9190611081565b61016961018e366004610f97565b610325565b61011b6101a1366004610f66565b61068c565b6100d26101b4366004610f23565b6106c3565b6100d26101c7366004610f3b565b610913565b6100d26101da366004610f23565b61092f565b6101696101ed366004610ef5565b610b62565b6101fa610c27565b60006102088686868661068c565b9050610213816106c3565b9695505050505050565b60009081526004602052604090205460ff1690565b600081610247604085901b608087901b6112ff565b61025191906112ff565b949350505050565b60009081526002602052604090205460ff1690565b60008061027c858585610232565b60009081526004602052604090205460ff1695945050505050565b6000806102a68686868661068c565b60009081526002602052604090205460ff169695505050505050565b6102ca610bd3565b6001600160a01b03166102db610316565b6001600160a01b03161461030a5760405162461bcd60e51b8152600401610301906111a4565b60405180910390fd5b6103146000610bd7565b565b6000546001600160a01b031690565b61032d610bd3565b6001600160a01b031661033e610316565b6001600160a01b0316146103645760405162461bcd60e51b8152600401610301906111a4565b60006103728887878761068c565b60008181526002602052604090205490915060ff16156103a45760405162461bcd60e51b81526004016103019061111b565b60006103b1898988610232565b60008181526004602052604090205490915060ff16156103e35760405162461bcd60e51b8152600401610301906110e6565b60008281526001602081815260409092208651805182558301519181019190915590850151805160028084019161041c91839190610c6e565b5060208201516104329060028084019190610c6e565b50505060408501518051600683019061044e9082906002610c6e565b5060208201516104649060028084019190610c6e565b50505060608501518051600a8301906104809082906002610c6e565b5060208201516104969060028084019190610c6e565b5090505060005b8560800151518160ff1610156105195781600e0186608001518260ff16815181106104d857634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001818101855560009485529383902082516002909202019081559101519101558061051181611317565b91505061049d565b506000838152600260208181526040808420805460ff1916600190811790915586855260038352932087518051825582015193810193909355860151805190918381019161056991839190610c6e565b50602082015161057f9060028084019190610c6e565b50505060408501518051600683019061059b9082906002610c6e565b5060208201516105b19060028084019190610c6e565b50505060608501518051600a8301906105cd9082906002610c6e565b5060208201516105e39060028084019190610c6e565b5090505060005b8560800151518160ff1610156106665781600e0186608001518260ff168151811061062557634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001818101855560009485529383902082516002909202019081559101519101558061065e81611317565b9150506105ea565b5050506000908152600460205260409020805460ff191660011790555050505050505050565b600082604085901b6106a6608088901b60c086901b6112ff565b6106b091906112ff565b6106ba91906112ff565b95945050505050565b6106cb610c27565b60008281526002602052604090205460ff1615156001146106fe5760405162461bcd60e51b8152600401610301906111d9565b600082815260016020818152604092839020835160e081018552815460a082019081529382015460c0820152928352835160808101808652939491939285019290916002808601928492830191849182845b81548152602001906001019080831161075057505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610786575050509190925250505081526040805160808101808352602090930192909160068501918391820190839060029082845b8154815260200190600101908083116107ca57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116108005750505091909252505050815260408051608081018083526020909301929091600a8501918391820190839060029082845b81548152602001906001019080831161084457505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161087a575050505050815250508152602001600e8201805480602002602001604051908101604052809291908181526020016000905b82821015610905578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108bf565b505050915250909392505050565b61091b610c27565b6000610928858585610232565b90506106ba815b610937610c27565b60008281526004602052604090205460ff16151560011461096a5760405162461bcd60e51b81526004016103019061115d565b600082815260036020818152604092839020835160e081018552815460a08201908152600183015460c083015281528451608081018087526002808501805498840198895293979496958801959294859390928592918901606086018083116107505750505091835250506040805180820191829052600284810180548352602094850194929390926003870190850180831161078657505050919092525050508152604080516080810180835260068501805493830193845260209094019391928391839060029060078901606086018083116107ca57505050918352505060408051808201918290526002848101805483526020948501949293909260038701908501808311610800575050509190925250505081526040805160808101808352600a85018054938301938452602090940193919283918390600290600b8901606086018083116108445750505091835250506040805180820191829052600284810180548352602094850194929390926003870190850180831161087a575050505050815250508152602001600e82018054806020026020016040519081016040528092919081815260200160009082821015610905578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108bf565b610b6a610bd3565b6001600160a01b0316610b7b610316565b6001600160a01b031614610ba15760405162461bcd60e51b8152600401610301906111a4565b6001600160a01b038116610bc75760405162461bcd60e51b8152600401610301906110a0565b610bd081610bd7565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a00160405280610c3a610cac565b8152602001610c47610cc6565b8152602001610c54610cc6565b8152602001610c61610cc6565b8152602001606081525090565b8260028101928215610c9c579160200282015b82811115610c9c578251825591602001919060010190610c81565b50610ca8929150610ceb565b5090565b604051806040016040528060008152602001600081525090565b6040518060400160405280610cd9610d00565b8152602001610ce6610d00565b905290565b5b80821115610ca85760008155600101610cec565b60405180604001604052806002906020820280368337509192915050565b600082601f830112610d2e578081fd5b610d3860406112cf565b808385604086011115610d49578384fd5b835b6002811015610d6a578135845260209384019390910190600101610d4b565b509095945050505050565b600060408284031215610d86578081fd5b610d9060406112cf565b9050813581526020820135602082015292915050565b600060808284031215610db7578081fd5b610dc160406112cf565b9050610dcd8383610d1e565b8152610ddc8360408401610d1e565b602082015292915050565b60006101e08284031215610df9578081fd5b610e0360a06112cf565b9050610e0f8383610d75565b81526040610e1f84828501610da6565b60208181850152610e338660c08701610da6565b83850152610e45866101408701610da6565b60608501526101c085013591506001600160401b0380831115610e6757600080fd5b828601925086601f840112610e7b57600080fd5b823581811115610e8d57610e8d61134d565b610e9a83848302016112cf565b8181528381019250848401868302860185018a1015610eb857600080fd5b600095505b82861015610ee357610ecf8a82610d75565b845260019590950194928401928601610ebd565b50608087015250939695505050505050565b600060208284031215610f06578081fd5b81356001600160a01b0381168114610f1c578182fd5b9392505050565b600060208284031215610f34578081fd5b5035919050565b600080600060608486031215610f4f578182fd5b505081359360208301359350604090920135919050565b60008060008060808587031215610f7b578081fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a031215610fb1578283fd5b873596506020880135955060408801359450606088013593506080880135925060a08801356001600160401b0380821115610fea578384fd5b610ff68b838c01610de7565b935060c08a013591508082111561100b578283fd5b506110188a828b01610de7565b91505092959891949750929550565b8060005b600281101561104a57815184526020938401939091019060010161102b565b50505050565b80518252602090810151910152565b61106a828251611027565b602081015161107c6040840182611027565b505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f566b52656769737472793a2074616c6c7920766b20616c726561647920736574604082015260600190565b60208082526022908201527f566b52656769737472793a2070726f6365737320766b20616c72656164792073604082015261195d60f21b606082015260800190565b60208082526027908201527f566b52656769737472793a2074616c6c7920766572696679696e67206b6579206040820152661b9bdd081cd95d60ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f566b52656769737472793a2070726f6365737320766572696679696e67206b656040820152681e481b9bdd081cd95d60ba1b606082015260800190565b60006020808352610200830161123b8285018651611050565b8185015161124c606086018261105f565b5060408086015161126060e087018261105f565b50606086015161127461016087018261105f565b5060808601516101e08681015280519283905283019184906102208701905b808310156112ba576112a6828651611050565b938501936001929092019190830190611293565b50979650505050505050565b90815260200190565b604051601f8201601f191681016001600160401b03811182821017156112f7576112f761134d565b604052919050565b6000821982111561131257611312611337565b500190565b600060ff821660ff81141561132e5761132e611337565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ffe7ddebcca1147a449ae868c158a489252e658694647121710a13a0d5c59bc364736f6c63430008010033";

type VkRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VkRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VkRegistry__factory extends ContractFactory {
  constructor(...args: VkRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VkRegistry> {
    return super.deploy(overrides || {}) as Promise<VkRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VkRegistry {
    return super.attach(address) as VkRegistry;
  }
  connect(signer: Signer): VkRegistry__factory {
    return super.connect(signer) as VkRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VkRegistryInterface {
    return new utils.Interface(_abi) as VkRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VkRegistry {
    return new Contract(address, _abi, signerOrProvider) as VkRegistry;
  }
}
