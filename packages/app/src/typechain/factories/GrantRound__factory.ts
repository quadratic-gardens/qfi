/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GrantRound,
  GrantRoundInterface,
  MaxValuesStruct,
  TreeDepthsStruct,
  BatchSizesStruct,
  PubKeyStruct,
  ExtContractsStruct,
} from "../GrantRound";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voiceCreditFactor",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_coordinator",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_nativeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxMessages",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVoteOptions",
            type: "uint256",
          },
        ],
        internalType: "struct Params.MaxValues",
        name: "_maxValues",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "intStateTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeSubDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "voteOptionTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct Params.TreeDepths",
        name: "_treeDepths",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "messageBatchSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "tallyBatchSize",
            type: "uint8",
          },
        ],
        internalType: "struct Params.BatchSizes",
        name: "_batchSizes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IPubKey.PubKey",
        name: "_coordinatorPubKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract VkRegistry",
            name: "vkRegistry",
            type: "address",
          },
          {
            internalType: "contract IMACI",
            name: "maci",
            type: "address",
          },
          {
            internalType: "contract AccQueue",
            name: "messageAq",
            type: "address",
          },
        ],
        internalType: "struct PollDeploymentParams.ExtContracts",
        name: "_extContracts",
        type: "tuple",
      },
      {
        internalType: "contract IRecipientRegistry",
        name: "_recipientRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_allocatedAmount",
        type: "uint256",
      },
    ],
    name: "FundsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_isFinalized",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isCancelled",
        type: "bool",
      },
    ],
    name: "GrantRoundCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_stateRoot",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_messageRoot",
        type: "uint256",
      },
    ],
    name: "MergeMessageAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMessageAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        indexed: false,
        internalType: "struct IMessage.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IPubKey.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "PublishMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_tallyHash",
        type: "string",
      },
    ],
    name: "TallyPublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_messageSubRoot",
        type: "uint256",
      },
    ],
    name: "batchEnqueueMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batchSizes",
    outputs: [
      {
        internalType: "uint8",
        name: "messageBatchSize",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "tallyBatchSize",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_tallyResultProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_tallyResultSalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
    ],
    name: "claimFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKeyHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extContracts",
    outputs: [
      {
        internalType: "contract VkRegistry",
        name: "vkRegistry",
        type: "address",
      },
      {
        internalType: "contract IMACI",
        name: "maci",
        type: "address",
      },
      {
        internalType: "contract AccQueue",
        name: "messageAq",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alphaDenominator",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
    ],
    name: "getAllocatedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployTimeAndDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct IMessage.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IPubKey.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "hashMessageAndEncPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isAfterDeadline",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFinalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchingPoolSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxValues",
    outputs: [
      {
        internalType: "uint256",
        name: "maxMessages",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVoteOptions",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergeMessageAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "mergeMessageAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergedStateRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numSignUpsAndMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct IMessage.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IPubKey.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "publishMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct IMessage.Message[]",
        name: "_messages",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IPubKey.PubKey[]",
        name: "_encPubKeys",
        type: "tuple[]",
      },
    ],
    name: "publishMessageBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tallyHash",
        type: "string",
      },
    ],
    name: "publishTallyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recipientRegistry",
    outputs: [
      {
        internalType: "contract IRecipientRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stateAqMerged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSpent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_payoutAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
    ],
    name: "transferMatchingFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeDepths",
    outputs: [
      {
        internalType: "uint8",
        name: "intStateTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_spentProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_spentSalt",
        type: "uint256",
      },
    ],
    name: "verifyPerVOSpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSpentSalt",
        type: "uint256",
      },
    ],
    name: "verifySpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_tallyResultProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_tallyResultSalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyCommitment",
        type: "uint256",
      },
    ],
    name: "verifyTallyResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voiceCreditFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003ec138038062003ec183398101604081905262000034916200049c565b8686868686866200004e6200004862000258565b6200025c565b7f0e8c0be063e1dee5a8a9df19f0715acdfac6b7260f41d6c3769166cac049db776001557f142181123bdf04edceb703cda229ba08b79092aad0eada9552d51966ee46229a6002557f20c99bb8b43cd63ee07ee8f33b445888ff638f67a7019b6d50036352a0e5e7bd6003557f1a999f92e772c387eb618ff2864256f26f268addaca43c88af7f8fab56ee19e76004557f0b81b4da4b6b26de7e3997b3c2eb68abb7573206ae5de5b964de736ee40022ab6005558051601380546001600160a01b03199081166001600160a01b0393841617909155602080840151601480548416918516919091179055604084015160158054909316931692909217905582516006819055908301516007819055620001689190620002ac565b6009555050600b939093558151600f556020918201516010558251601280549484015160ff1995861660ff9384161761ff00199081166101009285168302179092558351601180549686015160408701516060909701519790981691851691909117909216958316029490941762ff0000191662010000928216929092029190911763ff00000019166301000000929091169190910217905542600a556016999099555050601880546001600160a01b03199081166001600160a01b0398891617909155601980548216968816969096179095555050601a805490931693909416929092179055506200064c9050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620002b86200036d565b83815260208101839052620002cd81620002d5565b949350505050565b6040516314d2f97b60e11b815260009073__$596cabfdcfe42a7e95c4859ee209d8ae06$$786969981fde07b94dd43900e3ddcb0089$__9063248f667790611067908590600401612ee7565b60206040518083038186803b15801561107f57600080fd5b505af4158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b79190612b4a565b92915050565b600a54600b549091565b6000806000601360010160009054906101000a90046001600160a01b03166001600160a01b031663122db1536040518163ffffffff1660e01b815260040160206040518083038186803b15801561111d57600080fd5b505afa158015611131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111559190612b4a565b600e549093509150509091565b60006000805160206138108339815191526002836040516020016111869190612dee565b60408051601f19818403018152908290526111a091612e24565b602060405180830381855afa1580156111bd573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906111e09190612b4a565b6110b79190613784565b60165481565b60006111fa6126ac565b8381526020810183905261120d816112df565b949350505050565b8260005b818160ff1610156112ac5761129a86868360ff1681811061124a57634e487b7160e01b600052603260045260246000fd5b905061014002018036038101906112619190612bce565b85858460ff1681811061128457634e487b7160e01b600052603260045260246000fd5b9050604002018036038101906103349190612c20565b806112a481613764565b915050611219565b5060405133907f16a9aa39af49f169911e977347975198c503525f7240d6892a626f0227642fce90600090a25050505050565b6040516314d2f97b60e11b815260009073__$596cabfdcfe42a7e95c4859ee209d8ae06$__906329a5f2f690611067908590600401612e8e565b6113216122f4565b6001600160a01b031661133261175a565b6001600160a01b0316146113585760405162461bcd60e51b81526004016107c8906132bd565b61136260006124be565b565b600080600a544261137591906136a4565b600b541091505090565b601d805461138c9061370e565b80601f01602080910402602001604051908101604052809291908181526020018280546113b89061370e565b80156114055780601f106113da57610100808354040283529160200191611405565b820191906000526020600020905b8154815290600101906020018083116113e857829003601f168201915b505050505081565b6114156122f4565b6001600160a01b031661142661175a565b6001600160a01b03161461144c5760405162461bcd60e51b81526004016107c8906132bd565b6000600a544261145c91906136a4565b9050600b54811160405180604001604052806007815260200166141bdb1b114c0d60ca1b815250906114a15760405162461bcd60e51b81526004016107c89190612fa6565b50600c54604080518082019091526007815266506f6c6c45303760c81b60208201529060ff16156114e55760405162461bcd60e51b81526004016107c89190612fa6565b5060145460408051630c0775ff60e31b815290516001600160a01b039092169163603baff891600480820192602092909190829003018186803b15801561152b57600080fd5b505afa15801561153f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115639190612971565b6001600160a01b031663b6a64acd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561159b57600080fd5b505afa1580156115af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d39190612b2a565b61163c5760145460405163cfa1fa0360e01b81526001600160a01b039091169063cfa1fa03906116099086908690600401613484565b600060405180830381600087803b15801561162357600080fd5b505af1158015611637573d6000803e3d6000fd5b505050505b7fbe5eae95ff0a9a2779506ae62da06dda1e349311d3f2b6ceb990ea42b6a5f20b8360405161166b919061347b565b60405180910390a1505050565b60006116826126ca565b83515181528351602090810151908201528351604090810151908201528351606090810151908201528351608090810151908201526116bf6126ca565b845160a001518152845160c001516020820152845160e0015160408083019190915285516101000151606083015285516101200151608080840191909152815190810190915261173d908061171385611898565b815260200161172184611898565b815260200186600001518152602001866020015181525061102d565b95945050505050565b60095481565b601c54610100900460ff1681565b6000546001600160a01b031690565b601c5460ff1681565b61177a6122f4565b6001600160a01b031661178b61175a565b6001600160a01b0316146117b15760405162461bcd60e51b81526004016107c8906132bd565b6000600a54426117c191906136a4565b9050600b54811160405180604001604052806007815260200166141bdb1b114c0d60ca1b815250906118065760405162461bcd60e51b81526004016107c89190612fa6565b5060155460405163c15da65b60e01b81526001600160a01b039091169063c15da65b9061183790859060040161347b565b600060405180830381600087803b15801561185157600080fd5b505af1158015611865573d6000803e3d6000fd5b505050507f1245b881cb30fdad22b2f9fde2d5c2a3605bbdf272d5e8a2235d8c9e81aba2ce826040516108e6919061347b565b604051630926f44b60e31b815260009073__$ef696bd9a8b217cb2f06b9f3dff68275d6$__90634937a25890611067908590600401612f0f565b60205481565b6118e06122f4565b6001600160a01b03166118f161175a565b6001600160a01b0316146119175760405162461bcd60e51b81526004016107c8906132bd565b6000600a544261192791906136a4565b9050600b54811160405180604001604052806007815260200166141bdb1b114c0d60ca1b8152509061196c5760405162461bcd60e51b81526004016107c89190612fa6565b50601554604051633002f6f360e21b81526001600160a01b039091169063c00bdbcc9061199d90859060040161347b565b600060405180830381600087803b1580156119b757600080fd5b505af11580156119cb573d6000803e3d6000fd5b505050505050565b60115460ff808216916101008104821691620100008204811691630100000090041684565b611a006122f4565b6001600160a01b0316611a1161175a565b6001600160a01b031614611a375760405162461bcd60e51b81526004016107c8906132bd565b6000600a5442611a4791906136a4565b9050600b54811160405180604001604052806007815260200166141bdb1b114c0d60ca1b81525090611a8c5760405162461bcd60e51b81526004016107c89190612fa6565b50600c54604080518082019091526007815266506f6c6c45303760c81b60208201529060ff1615611ad05760405162461bcd60e51b81526004016107c89190612fa6565b5060145460408051630c0775ff60e31b815290516001600160a01b039092169163603baff891600480820192602092909190829003018186803b158015611b1657600080fd5b505afa158015611b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4e9190612971565b6001600160a01b031663b6a64acd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b8657600080fd5b505afa158015611b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbe9190612b2a565b604051806040016040528060078152602001660a0ded8d88a60760cb1b81525090611bfc5760405162461bcd60e51b81526004016107c89190612fa6565b5060145460405163dd0982a360e01b81526001600160a01b039091169063dd0982a390611c2d90859060040161347b565b602060405180830381600087803b158015611c4757600080fd5b505af1158015611c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7f9190612b4a565b50600c805460ff191660011790556014546040805163143bf01b60e11b815290516001600160a01b0390921691632877e03691600480820192602092909190829003018186803b158015611cd257600080fd5b505afa158015611ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0a9190612b4a565b600855611d1561268e565b6008548152601154600190611d359082906301000000900460ff166136bb565b60ff1660058110611d5657634e487b7160e01b600052603260045260246000fd5b0154602082015260006040820152611d6d81611f9f565b600d556008546040517f58deecc020170648ca539f41d6d967a2d071ce17a8296866ba3b3403977fd8ec9161166b9161347b565b600c5460ff1681565b6013546014546015546001600160a01b0392831692918216911683565b601c54610100900460ff16611dee5760405162461bcd60e51b81526004016107c8906130d1565b601c5460ff1615611e115760405162461bcd60e51b81526004016107c890613151565b6000888152601b602052604090205460ff1615611e405760405162461bcd60e51b81526004016107c890613338565b6000611e5189898989898989612287565b905080611e705760405162461bcd60e51b81526004016107c890613201565b506000888152601b60205260408120805460ff1916600117905580611e936110bd565b601a5491935091506000906001600160a01b03166362564ed48c85611eb88682613542565b6040518463ffffffff1660e01b8152600401611ed693929190613492565b60206040518083038186803b158015611eee57600080fd5b505afa158015611f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f269190612971565b90506001600160a01b038116611f4157611f3e61175a565b90505b6000611f4e8b6000611fdf565b601954909150611f68906001600160a01b03168383612463565b6000805160206137f0833981519152828d83604051611f8993929190612e6d565b60405180910390a1505050505050505050505050565b6040516304b98e1d60e31b815260009073__$c2ea40cdad08c2f0f910bd605f43e18753$__906325cc70e890611067908590600401612ebf565b600d5481565b600060165482611fef9190613685565b611ffa6002856135b4565b6017546120079190613685565b6120119190613542565b9392505050565b601a546001600160a01b031681565b60008061203484846111f0565b6011549091506001906120529082906301000000900460ff166136bb565b60ff166005811061207357634e487b7160e01b600052603260045260246000fd5b0154149392505050565b60125460ff8082169161010090041682565b6018546001600160a01b031633146120b95760405162461bcd60e51b81526004016107c890613108565b601c54610100900460ff16156120e15760405162461bcd60e51b81526004016107c8906131cc565b806120fe5760405162461bcd60e51b81526004016107c8906132f2565b61210a601d83836126e8565b507f25889b4220280b76437c086efe0bbecb5315f90890d209d027b11cceb7bdd3fb82826040516108e6929190612f77565b60175481565b6019546001600160a01b031681565b6121596122f4565b6001600160a01b031661216a61175a565b6001600160a01b0316146121905760405162461bcd60e51b81526004016107c8906132bd565b601c54610100900460ff16156121b85760405162461bcd60e51b81526004016107c8906133b2565b601c8054600161010061ff0019909216821760ff191617918290556040517f6ddecb46d9696f82bdc0d7aa94bf02cfbebb00e5531df0a9448ec9708c85f6969261220c9260ff908204811692911690612f42565b60405180910390a1565b61221e6122f4565b6001600160a01b031661222f61175a565b6001600160a01b0316146122555760405162461bcd60e51b81526004016107c8906132bd565b6001600160a01b03811661227b5760405162461bcd60e51b81526004016107c89061308b565b612284816124be565b50565b60115460009081906122a5906301000000900460ff168a8a8a6122f8565b905060006122b382886111f0565b90506122bd61268e565b8181526020810187905260408101869052846122d882611f9f565b149b9a5050505050505050505050565b601e5481565b60085481565b3390565b600080612306600586613784565b90508360006123136126ca565b60005b8960ff168160ff1610156124555760005b600560ff8216101561241d57858160ff16141561236c5784838260ff166005811061236257634e487b7160e01b600052603260045260246000fd5b602002015261240b565b858160ff161115612389576123826001826136bb565b935061238d565b8093505b878260ff16815181106123b057634e487b7160e01b600052603260045260246000fd5b60200260200101518460ff16815181106123da57634e487b7160e01b600052603260045260246000fd5b6020026020010151838260ff166005811061240557634e487b7160e01b600052603260045260246000fd5b60200201525b8061241581613764565b915050612327565b5061242960058a61355a565b985061243660058a613784565b945061244182611898565b93508061244d81613764565b915050612316565b509198975050505050505050565b6124b98363a9059cbb60e01b8484604051602401612482929190612e54565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261250e565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612563826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661259d9092919063ffffffff16565b8051909150156124b957808060200190518101906125819190612b2a565b6124b95760405162461bcd60e51b81526004016107c8906133e9565b606061120d8484600085856125b185612646565b6125cd5760405162461bcd60e51b81526004016107c89061337b565b600080866001600160a01b031685876040516125e99190612e24565b60006040518083038185875af1925050503d8060008114612626576040519150601f19603f3d011682016040523d82523d6000602084013e61262b565b606091505b509150915061263b828286612655565b979650505050505050565b6001600160a01b03163b151590565b60608315612664575081612011565b8251156126745782518084602001fd5b8160405162461bcd60e51b81526004016107c89190612fa6565b60405180606001604052806003906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b8280546126f49061370e565b90600052602060002090601f016020900481019282612716576000855561275c565b82601f1061272f5782800160ff1982351617855561275c565b8280016001018555821561275c579182015b8281111561275c578235825591602001919060010190612741565b5061276892915061276c565b5090565b5b80821115612768576000815560010161276d565b60006001600160401b0383111561279a5761279a6137c4565b60208084026127a8816134ef565b925082848783870111156127bb57600080fd5b600092505b868310156127de5780358252600192909201919083019083016127c0565b505050509392505050565b600082601f8301126127f9578081fd5b8135602061280e6128098361351f565b6134ef565b82815281810190858301855b8581101561284357612831898684358b0101612850565b8452928401929084019060010161281a565b5090979650505050505050565b600082601f830112612860578081fd5b813560206128706128098361351f565b828152818101908583018385028701840188101561288c578586fd5b855b858110156128435781358452928401929084019060010161288e565b60006101408083850312156128bd578182fd5b60206128c8816134ef565b925084601f8501126128d957600080fd5b6128e2826134ef565b80858785880111156128f357600080fd5b600094505b600a8510156129175780358352600194909401939183019183016128f8565b5084525091949350505050565b600060408284031215612935578081fd5b61293f60406134ef565b9050813581526020820135602082015292915050565b600060208284031215612966578081fd5b8135612011816137da565b600060208284031215612982578081fd5b8151612011816137da565b600080600080604085870312156129a2578283fd5b84356001600160401b03808211156129b8578485fd5b818701915087601f8301126129cb578485fd5b8135818111156129d9578586fd5b886020610140830285010111156129ee578586fd5b602092830196509450908601359080821115612a08578384fd5b818701915087601f830112612a1b578384fd5b813581811115612a29578485fd5b886020604083028501011115612a3d578485fd5b95989497505060200194505050565b600060408284031215612a5d578081fd5b82601f830112612a6b578081fd5b61201183600284612781565b600060608284031215612a88578081fd5b82601f830112612a96578081fd5b61201183600384612781565b600060808284031215612ab3578081fd5b82601f830112612ac1578081fd5b61201183600484612781565b600060a08284031215612ade578081fd5b82601f830112612aec578081fd5b61201183600584612781565b600060208284031215612b09578081fd5b81356001600160401b03811115612b1e578182fd5b61120d84828501612850565b600060208284031215612b3b578081fd5b81518015158114612011578182fd5b600060208284031215612b5b578081fd5b5051919050565b60008060208385031215612b74578182fd5b82356001600160401b0380821115612b8a578384fd5b818501915085601f830112612b9d578384fd5b813581811115612bab578485fd5b866020828501011115612bbc578485fd5b60209290920196919550909350505050565b60006101408284031215612be0578081fd5b61201183836128aa565b6000806101808385031215612bfd578182fd5b612c0784846128aa565b9150612c17846101408501612924565b90509250929050565b600060408284031215612c31578081fd5b6120118383612924565b600060208284031215612c4c578081fd5b5035919050565b60008060408385031215612c65578182fd5b50508035926020909101359150565b600080600060608486031215612c88578081fd5b83359250602084013591506040840135612ca1816137da565b809150509250925092565b60008060008060808587031215612cc1578182fd5b843593506020850135925060408501356001600160401b03811115612ce4578283fd5b612cf0878288016127e9565b949793965093946060013593505050565b600080600080600080600060e0888a031215612d1b578485fd5b873596506020880135955060408801356001600160401b03811115612d3e578586fd5b612d4a8a828b016127e9565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b600080600080600080600080610100898b031215612d8f578182fd5b883597506020890135965060408901356001600160401b03811115612db2578283fd5b612dbe8b828c016127e9565b989b979a5097986060810135985060808101359760a0820135975060c0820135965060e090910135945092505050565b815160009082906020808601845b83811015612e1857815185529382019390820190600101612dfc565b50929695505050505050565b60008251612e368184602087016136de565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b60408101818360005b6002811015612eb6578151835260209283019290910190600101612e97565b50505092915050565b60608101818360005b6003811015612eb6578151835260209283019290910190600101612ec8565b60808101818360005b6004811015612eb6578151835260209283019290910190600101612ef0565b60a08101818360005b6005811015612eb6578151835260209283019290910190600101612f18565b901515815260200190565b91151582521515602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6000602082528251806020840152612fc58160408501602087016136de565b601f01601f19169190910160400192915050565b6020808252601490820152734772616e74526f756e643a204e6f20766f74657360601b604082015260600190565b6020808252601d908201527f4772616e74526f756e643a204d414349206e6f74206465706c6f796564000000604082015260600190565b6020808252602d908201527f4772616e74526f756e643a2054616c6c79206861736820686173206e6f74206260408201526c19595b881c1d589b1a5cda1959609a1b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601f908201527f4772616e74526f756e643a20526f756e64206e6f742066696e616c697a656400604082015260600190565b60208082526029908201527f4772616e74526f756e643a2053656e646572206973206e6f742074686520636f60408201526837b93234b730ba37b960b91b606082015260800190565b60208082526024908201527f4772616e74526f756e643a20526f756e6420686173206265656e2063616e63656040820152631b1b195960e21b606082015260800190565b6020808252601f908201527f4772616e74526f756e643a2063616c6c6572206973206e6f74204d4143492e00604082015260600190565b6020808252601b908201527a11dc985b9d149bdd5b990e88149bdd5b9908199a5b985b1a5e9959602a1b604082015260600190565b60208082526024908201527f46756e64696e67526f756e643a20496e636f72726563742074616c6c792072656040820152631cdd5b1d60e21b606082015260800190565b60208082526021908201527f4772616e74526f756e643a204d657373616765204151206e6f74206d657267656040820152601960fa1b606082015260800190565b6020808252601f908201527f4772616e74526f756e643a205374617465204151206e6f74206d657267656400604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4772616e74526f756e643a2054616c6c79206861736820697320656d70747920604082015265737472696e6760d01b606082015260800190565b60208082526023908201527f46756e64696e67526f756e643a2046756e647320616c726561647920636c61696040820152621b595960ea1b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601d908201527f4772616e74526f756e643a20416c72656164792066696e616c697a6564000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b82516101808201908260005b600a81101561345e57825182526020928301929091019060010161343f565b505050825161014083015260208301516101608301529392505050565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60ff92831681529116602082015260400190565b60ff948516815292841660208401529083166040830152909116606082015260800190565b604051601f8201601f191681016001600160401b0381118282101715613517576135176137c4565b604052919050565b60006001600160401b03821115613538576135386137c4565b5060209081020190565b6000821982111561355557613555613798565b500190565b600082613569576135696137ae565b500490565b80825b600180861161358057506135ab565b81870482111561359257613592613798565b8086161561359f57918102915b9490941c938002613571565b94509492505050565b600061201160001960ff8516846000826135d057506001612011565b816135dd57506000612011565b81600181146135f357600281146135fd5761362a565b6001915050612011565b60ff84111561360e5761360e613798565b6001841b91508482111561362457613624613798565b50612011565b5060208310610133831016604e8410600b841016171561365d575081810a8381111561365857613658613798565b612011565b61366a848484600161356e565b80860482111561367c5761367c613798565b02949350505050565b600081600019048311821515161561369f5761369f613798565b500290565b6000828210156136b6576136b6613798565b500390565b600060ff821660ff8416808210156136d5576136d5613798565b90039392505050565b60005b838110156136f95781810151838201526020016136e1565b83811115613708576000848401525b50505050565b60028104600182168061372257607f821691505b6020821081141561374357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561375d5761375d613798565b5060010190565b600060ff821660ff81141561377b5761377b613798565b60010192915050565b600082613793576137936137ae565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461228457600080fdfe4a928ee5d1397dcab0a17b6f9b1e4250d15c6bda472de38c65b38c38ff790d0c30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212205ba41c013b287f3f99b3147a6d7cef424853dab4f9b1effd150423873c1d4f0264736f6c63430008010033";

type GrantRoundConstructorParams =
  | [linkLibraryAddresses: GrantRoundLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GrantRoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GrantRound__factory extends ContractFactory {
  constructor(...args: GrantRoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GrantRound__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GrantRoundLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$596cabfdcfe42a7e95c4859ee209d8ae06\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$786969981fde07b94dd43900e3ddcb0089\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ef696bd9a8b217cb2f06b9f3dff68275d6\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c2ea40cdad08c2f0f910bd605f43e18753\\$__", "g"),
      linkLibraryAddresses[
        "qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _voiceCreditFactor: BigNumberish,
    _coordinator: string,
    _nativeToken: string,
    _duration: BigNumberish,
    _maxValues: MaxValuesStruct,
    _treeDepths: TreeDepthsStruct,
    _batchSizes: BatchSizesStruct,
    _coordinatorPubKey: PubKeyStruct,
    _extContracts: ExtContractsStruct,
    _recipientRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GrantRound> {
    return super.deploy(
      _voiceCreditFactor,
      _coordinator,
      _nativeToken,
      _duration,
      _maxValues,
      _treeDepths,
      _batchSizes,
      _coordinatorPubKey,
      _extContracts,
      _recipientRegistry,
      overrides || {}
    ) as Promise<GrantRound>;
  }
  getDeployTransaction(
    _voiceCreditFactor: BigNumberish,
    _coordinator: string,
    _nativeToken: string,
    _duration: BigNumberish,
    _maxValues: MaxValuesStruct,
    _treeDepths: TreeDepthsStruct,
    _batchSizes: BatchSizesStruct,
    _coordinatorPubKey: PubKeyStruct,
    _extContracts: ExtContractsStruct,
    _recipientRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _voiceCreditFactor,
      _coordinator,
      _nativeToken,
      _duration,
      _maxValues,
      _treeDepths,
      _batchSizes,
      _coordinatorPubKey,
      _extContracts,
      _recipientRegistry,
      overrides || {}
    );
  }
  attach(address: string): GrantRound {
    return super.attach(address) as GrantRound;
  }
  connect(signer: Signer): GrantRound__factory {
    return super.connect(signer) as GrantRound__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GrantRoundInterface {
    return new utils.Interface(_abi) as GrantRoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GrantRound {
    return new Contract(address, _abi, signerOrProvider) as GrantRound;
  }
}

export interface GrantRoundLibraryAddresses {
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT3"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT5"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT6"]: string;
  ["qaci-contracts/contracts/crypto/Hasher.sol:PoseidonT4"]: string;
}
