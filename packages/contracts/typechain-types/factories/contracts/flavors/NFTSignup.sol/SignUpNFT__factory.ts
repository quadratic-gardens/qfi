/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SignUpNFT,
  SignUpNFTInterface,
} from "../../../../contracts/flavors/NFTSignup.sol/SignUpNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "giveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b8082526a29b4b3b72ab82a37b5b2b760a91b6020808401828152855180870190965292855284015281519192916200005891600091620000e7565b5080516200006e906001906020840190620000e7565b5050506200008b620000856200009160201b60201c565b62000095565b620001ca565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f5906200018d565b90600052602060002090601f01602090048101928262000119576000855562000164565b82601f106200013457805160ff191683800117855562000164565b8280016001018555821562000164579182015b828111156200016457825182559160200191906001019062000147565b506200017292915062000176565b5090565b5b8082111562000172576000815560010162000177565b600181811c90821680620001a257607f821691505b60208210811415620001c457634e487b7160e01b600052602260045260246000fd5b50919050565b6113c380620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806301ffc9a7146100e057806306fdde0314610108578063081812fc1461011d578063095ea7b314610148578063193f974c1461015d57806323b872dd1461017057806342842e0e146101835780636352211e1461019657806370a08231146101a9578063715018a6146101ca5780638da5cb5b146101d257806395d89b41146101da578063a22cb465146101e2578063b88d4fde146101f5578063c87b56dd14610208578063e985e9c51461021b578063f2fde38b1461022e575b600080fd5b6100f36100ee366004610ebf565b610241565b60405190151581526020015b60405180910390f35b610110610293565b6040516100ff9190610f34565b61013061012b366004610f47565b610325565b6040516001600160a01b0390911681526020016100ff565b61015b610156366004610f7c565b61034c565b005b61015b61016b366004610f7c565b610467565b61015b61017e366004610fa6565b61047d565b61015b610191366004610fa6565b6104ae565b6101306101a4366004610f47565b6104c9565b6101bc6101b7366004610fe2565b6104fd565b6040519081526020016100ff565b61015b610583565b610130610597565b6101106105a6565b61015b6101f0366004610ffd565b6105b5565b61015b61020336600461104f565b6105c0565b610110610216366004610f47565b6105f8565b6100f361022936600461112a565b61066c565b61015b61023c366004610fe2565b61069a565b60006001600160e01b031982166380ac58cd60e01b148061027257506001600160e01b03198216635b5e139f60e01b145b8061028d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a29061115d565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce9061115d565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b600061033082610713565b506000908152600460205260409020546001600160a01b031690565b6000610357826104c9565b9050806001600160a01b0316836001600160a01b031614156103ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e657506103e6813361066c565b6104585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103c1565b6104628383610738565b505050565b61046f6107a6565b6104798282610805565b5050565b6104873382610900565b6104a35760405162461bcd60e51b81526004016103c190611198565b61046283838361095f565b610462838383604051806020016040528060008152506105c0565b6000806104d583610ab1565b90506001600160a01b03811661028d5760405162461bcd60e51b81526004016103c1906111e5565b60006001600160a01b0382166105675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103c1565b506001600160a01b031660009081526003602052604090205490565b61058b6107a6565b6105956000610acc565b565b6006546001600160a01b031690565b6060600180546102a29061115d565b610479338383610b1e565b6105ca3383610900565b6105e65760405162461bcd60e51b81526004016103c190611198565b6105f284848484610be9565b50505050565b606061060382610713565b600061061a60408051602081019091526000815290565b9050600081511161063a5760405180602001604052806000815250610665565b8061064484610c1c565b604051602001610655929190611217565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106a26107a6565b6001600160a01b0381166107075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c1565b61071081610acc565b50565b61071c81610cb8565b6107105760405162461bcd60e51b81526004016103c1906111e5565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061076d826104c9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b336107af610597565b6001600160a01b0316146105955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c1565b6001600160a01b03821661085b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c1565b61086481610cb8565b156108815760405162461bcd60e51b81526004016103c190611246565b61088a81610cb8565b156108a75760405162461bcd60e51b81526004016103c190611246565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b03191684179055518392919060008051602061136e833981519152908290a45050565b60008061090c836104c9565b9050806001600160a01b0316846001600160a01b031614806109335750610933818561066c565b806109575750836001600160a01b031661094c84610325565b6001600160a01b0316145b949350505050565b826001600160a01b0316610972826104c9565b6001600160a01b0316146109985760405162461bcd60e51b81526004016103c19061127c565b6001600160a01b0382166109fa5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c1565b826001600160a01b0316610a0d826104c9565b6001600160a01b031614610a335760405162461bcd60e51b81526004016103c19061127c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b03878116808652600385528386208054600019019055908716808652838620805460010190558686526002909452828520805490921684179091559051849360008051602061136e83398151915291a4505050565b6000908152600260205260409020546001600160a01b031690565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610b7c5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103c1565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bf484848461095f565b610c0084848484610cd5565b6105f25760405162461bcd60e51b81526004016103c1906112c1565b60606000610c2983610dd3565b60010190506000816001600160401b03811115610c4857610c48611039565b6040519080825280601f01601f191660200182016040528015610c72576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cab57610cb0565b610c7c565b509392505050565b600080610cc483610ab1565b6001600160a01b0316141592915050565b60006001600160a01b0384163b15610dc857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d19903390899088908890600401611313565b6020604051808303816000875af1925050508015610d54575060408051601f3d908101601f19168201909252610d5191810190611350565b60015b610dae573d808015610d82576040519150601f19603f3d011682016040523d82523d6000602084013e610d87565b606091505b508051610da65760405162461bcd60e51b81526004016103c1906112c1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610957565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e125772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310610e3c576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310610e5a57662386f26fc10000830492506010015b6305f5e1008310610e72576305f5e100830492506008015b6127108310610e8657612710830492506004015b60648310610e98576064830492506002015b600a831061028d5760010192915050565b6001600160e01b03198116811461071057600080fd5b600060208284031215610ed157600080fd5b813561066581610ea9565b60005b83811015610ef7578181015183820152602001610edf565b838111156105f25750506000910152565b60008151808452610f20816020860160208601610edc565b601f01601f19169290920160200192915050565b6020815260006106656020830184610f08565b600060208284031215610f5957600080fd5b5035919050565b80356001600160a01b0381168114610f7757600080fd5b919050565b60008060408385031215610f8f57600080fd5b610f9883610f60565b946020939093013593505050565b600080600060608486031215610fbb57600080fd5b610fc484610f60565b9250610fd260208501610f60565b9150604084013590509250925092565b600060208284031215610ff457600080fd5b61066582610f60565b6000806040838503121561101057600080fd5b61101983610f60565b91506020830135801515811461102e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561106557600080fd5b61106e85610f60565b935061107c60208601610f60565b92506040850135915060608501356001600160401b038082111561109f57600080fd5b818701915087601f8301126110b357600080fd5b8135818111156110c5576110c5611039565b604051601f8201601f19908116603f011681019083821181831017156110ed576110ed611039565b816040528281528a602084870101111561110657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561113d57600080fd5b61114683610f60565b915061115460208401610f60565b90509250929050565b600181811c9082168061117157607f821691505b6020821081141561119257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b60008351611229818460208801610edc565b83519083019061123d818360208801610edc565b01949350505050565b6020808252601c908201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604082015260600190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061134690830184610f08565b9695505050505050565b60006020828403121561136257600080fd5b815161066581610ea956feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122063c0025bbed1041f46b0f1b4307d1265fed9367f5f1a6e78b96d5b662ba9e14264736f6c634300080a0033";

type SignUpNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignUpNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignUpNFT__factory extends ContractFactory {
  constructor(...args: SignUpNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SignUpNFT> {
    return super.deploy(overrides || {}) as Promise<SignUpNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignUpNFT {
    return super.attach(address) as SignUpNFT;
  }
  override connect(signer: Signer): SignUpNFT__factory {
    return super.connect(signer) as SignUpNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignUpNFTInterface {
    return new utils.Interface(_abi) as SignUpNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignUpNFT {
    return new Contract(address, _abi, signerOrProvider) as SignUpNFT;
  }
}
