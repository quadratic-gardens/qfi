/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OptimisticRecipientRegistry,
  OptimisticRecipientRegistryInterface,
} from "../../../contracts/recipientRegistry/OptimisticRecipientRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_challengePeriodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_recipientId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "enum OptimisticRecipientRegistry.RequestType",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_rejected",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_recipientIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "RequestResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_recipientId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "enum OptimisticRecipientRegistry.RequestType",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "RequestSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePeriodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_recipientId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "challengeRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_recipientId",
        type: "bytes32",
      },
    ],
    name: "executeRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "getRecipientAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecipientCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRecipients",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_recipientId",
        type: "bytes32",
      },
    ],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseDeposit",
        type: "uint256",
      },
    ],
    name: "setBaseDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_challengePeriodDuration",
        type: "uint256",
      },
    ],
    name: "setChallengePeriodDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxRecipients",
        type: "uint256",
      },
    ],
    name: "setMaxRecipients",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119f53803806119f583398101604081905261002f916100b5565b61003833610065565b600692909255600755600180546001600160a01b0319166001600160a01b039092169190911790556100fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100ca57600080fd5b83516020850151604086015191945092506001600160a01b03811681146100f057600080fd5b809150509250925092565b6118eb8061010a6000396000f3fe6080604052600436106100c25760003560e01c806282a36d146100c7578063148ec9ab146100f05780634458e6091461012057806362564ed414610142578063694746251461017a578063715018a614610190578063739b5384146101a557806388a13072146101b85780638d62272e146101ce5780638da5cb5b146101ee578063af99b63f14610203578063c22a933c14610218578063d7c9ebdd14610238578063e9c241661461024b578063f2fde38b1461026b578063f77c47911461028b575b600080fd5b3480156100d357600080fd5b506100dd60075481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b5061011061010b366004611415565b6102ab565b60405190151581526020016100e7565b34801561012c57600080fd5b5061014061013b366004611415565b61034f565b005b34801561014e57600080fd5b5061016261015d36600461142e565b61035c565b6040516001600160a01b0390911681526020016100e7565b34801561018657600080fd5b506100dd60065481565b34801561019c57600080fd5b506101406104dd565b6101406101b336600461146f565b6104f1565b3480156101c457600080fd5b506100dd60025481565b3480156101da57600080fd5b506101106101e93660046114f3565b6107c2565b3480156101fa57600080fd5b506101626109c3565b34801561020f57600080fd5b506100dd6109d2565b34801561022457600080fd5b50610140610233366004611415565b6109e9565b610140610246366004611415565b6109f6565b34801561025757600080fd5b50610110610266366004611415565b610bc5565b34801561027757600080fd5b50610140610286366004611523565b610e97565b34801561029757600080fd5b50600154610162906001600160a01b031681565b600060025482101561032c576040805162461bcd60e51b81526020600482015260248101919091527f526563697069656e7452656769737472793a204d6178206e756d626572206f6660448201527f20726563697069656e74732063616e206e6f742062652064656372656173656460648201526084015b60405180910390fd5b6001546001600160a01b0316331461034657506000919050565b50600255600190565b610357610f10565b600755565b600083158061036c575060055484115b15610379575060006104d6565b60006005610388600187611556565b815481106103985761039861156d565b906000526020600020018054806020026020016040519081016040528092919081815260200182805480156103ec57602002820191906000526020600020905b8154815260200190600101908083116103d8575b505050505090508051600014156104075760009150506104d6565b80516000905b80156104d157600083610421600184611556565b815181106104315761043161156d565b60209081029190910181015160008181526003808452604091829020825160808101845281546001600160a01b031681526001820154958101959095526002810154928501839052015460608401529092508710156104915750506104bf565b6060810151158015906104a8575087816060015111155b156104ba5783955050505050506104d6565b519250505b806104c981611583565b91505061040d565b509150505b9392505050565b6104e5610f10565b6104ef6000610f6f565b565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602c60248201527f526563697069656e7452656769737472793a20526563697069656e742061646460448201526b72657373206973207a65726f60a01b6064820152608401610323565b806105c25760405162461bcd60e51b815260206004820152603060248201527f526563697069656e7452656769737472793a204d6574616461746120696e666f60448201526f20697320656d70747920737472696e6760801b6064820152608401610323565b60008383836040516020016105d99392919061159a565b60408051601f19818403018152918152815160209283012060008181526003909352912060010154909150156106215760405162461bcd60e51b8152600401610323906115c2565b600081815260086020526040902060010154156106505760405162461bcd60e51b8152600401610323906115ff565b60065434146106715760405162461bcd60e51b81526004016103239061164b565b6040805160c081019091528060008152602001336001600160a01b03168152602001428152602001348152602001856001600160a01b0316815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508381526008602052604090208251815491925090829060ff19166001838181111561071357610713611696565b02179055506020828101518254610100600160a81b0319166101006001600160a01b0392831602178355604084015160018401556060840151600284015560808401516003840180546001600160a01b0319169190921617905560a083015180516107849260048501920190611308565b50600091506107909050565b81600080516020611836833981519152868686426040516107b494939291906116ac565b60405180910390a350505050565b60006107cc610f10565b600083815260086020526040808220815160c081019092528054829060ff1660018111156107fc576107fc611696565b600181111561080d5761080d611696565b815281546001600160a01b03610100909104811660208301526001830154604083015260028301546060830152600383015416608082015260048201805460a09092019161085a906116f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610886906116f6565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b50505050508152505090508060400151600014156109035760405162461bcd60e51b815260040161032390611731565b600084815260086020526040812080546001600160a81b031916815560018101829055600281018290556003810180546001600160a01b03191690559061094d600483018261138c565b505060608101516040516000916001600160a01b0386169181156108fc02919084818181858888f1865190955060019450925050508181111561099257610992611696565b60408051600081524260208201528891600080516020611876833981519152910160405180910390a4949350505050565b6000546001600160a01b031690565b6004546005546000916109e491611556565b905090565b6109f1610f10565b600655565b600081815260036020526040902060010154610a245760405162461bcd60e51b81526004016103239061177a565b6000818152600360208190526040909120015415610a545760405162461bcd60e51b8152600401610323906117cd565b60008181526008602052604090206001015415610a835760405162461bcd60e51b8152600401610323906115ff565b6006543414610aa45760405162461bcd60e51b81526004016103239061164b565b6040805160c08101825260018082523360208084019190915242838501523460608401526000608084018190528451808301865281815260a085015285815260089091529290922081518154929391929091839160ff1916908381811115610b0e57610b0e611696565b02179055506020828101518254610100600160a81b0319166101006001600160a01b0392831602178355604084015160018401556060840151600284015560808401516003840180546001600160a01b0319169190921617905560a08301518051610b7f9260048501920190611308565b5060019150610b8b9050565b604080516000808252606060208301819052820152428183015290518391600080516020611836833981519152919081900360800190a350565b600081815260086020526040808220815160c08101909252805483929190829060ff166001811115610bf957610bf9611696565b6001811115610c0a57610c0a611696565b815281546001600160a01b03610100909104811660208301526001830154604083015260028301546060830152600383015416608082015260048201805460a090920191610c57906116f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c83906116f6565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b5050505050815250509050806040015160001415610d005760405162461bcd60e51b815260040161032390611731565b610d086109c3565b6001600160a01b0316336001600160a01b031614610d98576007546040820151610d329042611556565b1015610d985760405162461bcd60e51b815260206004820152602f60248201527f526563697069656e7452656769737472793a204368616c6c656e67652070657260448201526e34b7b21034b9903737ba1037bb32b960891b6064820152608401610323565b6000600182516001811115610daf57610daf611696565b1415610dc357610dbe84610fbf565b610dd4565b610dd1848360800151611062565b90505b600084815260086020526040812080546001600160a81b031916815560018101829055600281018290556003810180546001600160a01b031916905590610e1e600483018261138c565b5050602082015160608301516040516000926001600160a01b03169180156108fc029184818181858888f1875190955060009450925050506001811115610e6757610e67611696565b604080518581524260208201528891600080516020611876833981519152910160405180910390a4949350505050565b610e9f610f10565b6001600160a01b038116610f045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610323565b610f0d81610f6f565b50565b33610f196109c3565b6001600160a01b0316146104ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610323565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815260036020526040902060010154610fed5760405162461bcd60e51b81526004016103239061177a565b600081815260036020819052604090912001541561101d5760405162461bcd60e51b8152600401610323906117cd565b60008181526003602081905260408220429101556004805460018101825591527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0155565b600080600254116110b95760405162461bcd60e51b815260206004820152602d602482015260008051602061185683398151915260448201526c1a5d081a5cc81b9bdd081cd95d609a1b6064820152608401610323565b600083815260036020526040902060010154156110e85760405162461bcd60e51b8152600401610323906115c2565b60055460009081906110fb906001611807565b9050600254811161119a5760408051600180825281830190925291925082916000916020808301908036833701905050905085816000815181106111415761114161156d565b602090810291909101810191909152600580546001810182556000919091528251611193927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0909201918401906113c6565b505061129a565b6004546111ea5760405162461bcd60e51b815260206004820152602a60248201526000805160206118568339815191526044820152691a5d081c995858da195960b21b6064820152608401610323565b60048054600091906111fe90600190611556565b8154811061120e5761120e61156d565b90600052602060002001549050600480548061122c5761122c61181f565b6001900381819060005260206000200160009055905560036000828152602001908152602001600020600101549250600560018461126a9190611556565b8154811061127a5761127a61156d565b600091825260208083209091018054600181018255908352912001869055505b50604080516080810182526001600160a01b0380861682526020808301858152428486019081526000606086018181528b82526003948590529690209451855494166001600160a01b0319909416939093178455516001840155905160028301559151910155905092915050565b828054611314906116f6565b90600052602060002090601f016020900481019282611336576000855561137c565b82601f1061134f57805160ff191683800117855561137c565b8280016001018555821561137c579182015b8281111561137c578251825591602001919060010190611361565b50611388929150611400565b5090565b508054611398906116f6565b6000825580601f106113a8575050565b601f016020900490600052602060002090810190610f0d9190611400565b82805482825590600052602060002090810192821561137c579160200282018281111561137c578251825591602001919060010190611361565b5b808211156113885760008155600101611401565b60006020828403121561142757600080fd5b5035919050565b60008060006060848603121561144357600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0381168114610f0d57600080fd5b60008060006040848603121561148457600080fd5b833561148f8161145a565b925060208401356001600160401b03808211156114ab57600080fd5b818601915086601f8301126114bf57600080fd5b8135818111156114ce57600080fd5b8760208285010111156114e057600080fd5b6020830194508093505050509250925092565b6000806040838503121561150657600080fd5b8235915060208301356115188161145a565b809150509250929050565b60006020828403121561153557600080fd5b81356104d68161145a565b634e487b7160e01b600052601160045260246000fd5b60008282101561156857611568611540565b500390565b634e487b7160e01b600052603260045260246000fd5b60008161159257611592611540565b506000190190565b606084901b6001600160601b0319168152818360148301376000910160140190815292915050565b6020808252602f9082015260008051602061189683398151915260408201526e1958591e481c9959da5cdd195c9959608a1b606082015260800190565b6020808252602c908201527f526563697069656e7452656769737472793a205265717565737420616c72656160408201526b191e481cdd589b5a5d1d195960a21b606082015260800190565b6020808252602b908201527f526563697069656e7452656769737472793a20496e636f72726563742064657060408201526a1bdcda5d08185b5bdd5b9d60aa1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038516815260606020820181905281018390528284608083013760006080848301015260006080601f19601f860116830101905082604083015295945050505050565b600181811c9082168061170a57607f821691505b6020821081141561172b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526029908201527f526563697069656e7452656769737472793a205265717565737420646f6573206040820152681b9bdd08195e1a5cdd60ba1b606082015260800190565b60208082526033908201527f526563697069656e7452656769737472793a20526563697069656e74206973206040820152726e6f7420696e2074686520726567697374727960681b606082015260800190565b6020808252602c9082015260008051602061189683398151915260408201526b1958591e481c995b5bdd995960a21b606082015260800190565b6000821982111561181a5761181a611540565b500190565b634e487b7160e01b600052603160045260246000fdfebb4ad318e5170357f8e7d25deefe5cf02bc8182cbb95600c22a1105978a8f1b8526563697069656e7452656769737472793a20526563697069656e74206c696d863e10260d0b36e06a2dee07c61c59e95209f121464f054ec556d22e958b1ef2526563697069656e7452656769737472793a20526563697069656e7420616c72a2646970667358221220cebd0ee67e17bbbd32faabe6a87a59102661d98258c1887c112716f634f6c26f64736f6c634300080a0033";

type OptimisticRecipientRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimisticRecipientRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimisticRecipientRegistry__factory extends ContractFactory {
  constructor(...args: OptimisticRecipientRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseDeposit: PromiseOrValue<BigNumberish>,
    _challengePeriodDuration: PromiseOrValue<BigNumberish>,
    _controller: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimisticRecipientRegistry> {
    return super.deploy(
      _baseDeposit,
      _challengePeriodDuration,
      _controller,
      overrides || {}
    ) as Promise<OptimisticRecipientRegistry>;
  }
  override getDeployTransaction(
    _baseDeposit: PromiseOrValue<BigNumberish>,
    _challengePeriodDuration: PromiseOrValue<BigNumberish>,
    _controller: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseDeposit,
      _challengePeriodDuration,
      _controller,
      overrides || {}
    );
  }
  override attach(address: string): OptimisticRecipientRegistry {
    return super.attach(address) as OptimisticRecipientRegistry;
  }
  override connect(signer: Signer): OptimisticRecipientRegistry__factory {
    return super.connect(signer) as OptimisticRecipientRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimisticRecipientRegistryInterface {
    return new utils.Interface(_abi) as OptimisticRecipientRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimisticRecipientRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimisticRecipientRegistry;
  }
}
